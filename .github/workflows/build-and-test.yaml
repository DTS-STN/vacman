name: Build and test solution
permissions: read-all

on:
  push:
    branches:
      - main
      - 'release/**'
  pull_request:
    branches:
      - main
      - 'release/**'
  workflow_call: {}
  workflow_dispatch: {}

env:
  CI: true

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    if: ${{ github.repository == 'DTS-STN/vacman' }}
    steps:
      - uses: actions/checkout@v4
      - id: backend
        uses: dorny/paths-filter@v3
        with:
          filters: |
            src:
              - backend/**
      - id: frontend
        uses: dorny/paths-filter@v3
        with:
          filters: |
            src:
              - frontend/**
      - id: gitops
        uses: dorny/paths-filter@v3
        with:
          filters: |
            src:
              - gitops/**
    outputs:
      backend-changed: ${{ steps.backend.outputs.src }}
      frontend-changed: ${{ steps.frontend.outputs.src }}
      gitops-changed: ${{ steps.gitops.outputs.src }}

  test-backend:
    runs-on: ubuntu-latest
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.backend-changed == 'true' }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
      - run: mvn clean verify
        working-directory: backend/
  build-backend:
    runs-on: ubuntu-latest
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.backend-changed == 'true' }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
      - run: mvn spring-boot:build-image
        working-directory: backend/

  test-frontend:
    runs-on: ubuntu-latest
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.frontend-changed == 'true' }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22.x
      - uses: pnpm/action-setup@v4
        with:
          version: 10
      - run: pnpm install --frozen-lockfile
        working-directory: frontend/
      - run: pnpm run typecheck
        working-directory: frontend/
      - run: pnpm run format:check
        working-directory: frontend/
      - run: pnpm run lint:check
        working-directory: frontend/
      - run: pnpm run test -- --coverage
        working-directory: frontend/
      - run: npx playwright install chromium --with-deps
        working-directory: frontend/
      - run: pnpm run test:e2e
        working-directory: frontend/
  build-frontend:
    runs-on: ubuntu-latest
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.frontend-changed == 'true' }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22.x
      - uses: pnpm/action-setup@v4
        with:
          version: 10
      - run: pnpm install
        working-directory: frontend/
      - run: podman build --file containerfile .
        working-directory: frontend/