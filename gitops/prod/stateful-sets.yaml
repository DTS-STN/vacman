apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis
  annotations:
    secret.reloader.stakater.com/auto: 'true'
  labels:
    app.kubernetes.io/name: redis
spec:
  replicas: 3
  serviceName: redis-headless
  selector:
    matchLabels:
      app.kubernetes.io/name: redis
  template:
    metadata:
      labels:
        app.kubernetes.io/name: redis
    spec:
      initContainers:
        - name: init
          image: docker.io/library/redis:7.4.5
          command: [bash, /etc/init.sh]
          envFrom:
            - secretRef:
                name: redis
          volumeMounts:
            - name: data
              mountPath: /data
            - name: config
              mountPath: /etc/init.sh
              subPath: init.sh
            - name: config
              mountPath: /etc/primary.conf
              subPath: primary.conf
            - name: config
              mountPath: /etc/replica.conf
              subPath: replica.conf
            - name: config
              mountPath: /etc/sentinel.conf
              subPath: sentinel.conf
      containers:
        - name: redis
          image: docker.io/library/redis:7.4.5
          args: [/data/redis.conf, --requirepass, $(REDIS_PASSWORD), --masterauth, $(REDIS_PASSWORD)]
          envFrom:
            - secretRef:
                name: redis
          ports:
            - name: redis
              containerPort: 6379
          livenessProbe:
            exec:
              command: [/usr/local/bin/redis-cli, --pass, $(REDIS_PASSWORD), ping]
            timeoutSeconds: 5
          readinessProbe:
            exec:
              command: [/usr/local/bin/redis-cli, --pass, $(REDIS_PASSWORD), ping]
            timeoutSeconds: 5
          resources:
            requests:
              cpu: 100m
              memory: 32Mi
            limits:
              cpu: 150m
              memory: 64Mi
          securityContext:
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
          volumeMounts:
            - name: data
              mountPath: /data
        - name: redis-sentinel
          # Note: image tag should be pinned to a specific version in overlays
          image: docker.io/library/redis:7.4.5
          args: [/data/sentinel.conf, --sentinel]
          ports:
            - name: sentinel
              containerPort: 26379
          livenessProbe:
            exec:
              command: [/usr/local/bin/redis-cli, --pass, $(REDIS_PASSWORD), ping]
            timeoutSeconds: 5
          readinessProbe:
            exec:
              command: [/usr/local/bin/redis-cli, --pass, $(REDIS_PASSWORD), ping]
            timeoutSeconds: 5
          resources:
            requests:
              cpu: 100m
              memory: 16Mi
            limits:
              cpu: 150m
              memory: 32Mi
          volumeMounts:
            - name: data
              mountPath: /data
      volumes:
        - name: config
          configMap:
            name: redis
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 256Mi