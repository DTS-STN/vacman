#######################################################################################################################
#
# Standard Spring Boot properties. Full reference available at:
# https://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/#common-application-properties
#
# This application supports configuration overrides using the following resolution order:
#
#   1. The usual Spring Boot configuration resolution: https://docs.spring.io/spring-boot/docs/current/reference/html/features.html#features.external-config
#   2. Config file src/main/resources/application-local.yaml
#
# To set configuration properties that are local to your development environment (for example log levels or database connection
# strings), create the file src/main/resources/application-local.yaml. This file is not managed by Git, so there is no chance of
# accidentally pushing your custom configuration to the project repository.
#
#######################################################################################################################

---

#
# ------------------------------------------------------------------------------------
# server properties
# ------------------------------------------------------------------------------------
#

server:
  compression:
    enabled: true
  shutdown: graceful

---

#
# ------------------------------------------------------------------------------------
# Basic Spring Boot properties
# ------------------------------------------------------------------------------------
#

spring:
  application:
    name: vacman-api
  data:
    web:
      pageable:
        one-indexed-parameters: true
        max-page-size: 200
  devtools:
    livereload:
      enabled: false
  jackson:
    default-property-inclusion: non-null
    mapper:
      sort-properties-alphabetically: true
    serialization:
      indent-output: true

---

#
# ------------------------------------------------------------------------------------
# DataSource configuration
# ------------------------------------------------------------------------------------
# See https://docs.spring.io/spring-boot/reference/data/sql.html
#

spring:
  datasource:
    name: ${spring.application.name}
    url: jdbc:h2:mem:testdb;MODE=MSSQLServer;DATABASE_TO_UPPER=false;CASE_INSENSITIVE_IDENTIFIERS=true;DB_CLOSE_DELAY=-1;
    hikari: # see https://github.com/brettwooldridge/HikariCP#frequently-used
      # Specifies the maximum time (in milliseconds) to wait for a connection from the pool before timing out.
      connection-timeout: 30000
      # Maximum time (in milliseconds) that a connection is allowed to sit idle in the pool.
      # This setting only applies when minimumIdle is defined as less than maximumPoolSize.
      idle-timeout: 600000
      # An in-use connection will be retired upon its return to the pool once this time is exceeded.
      # Helps in cycling connections and preventing stale connections.
      max-lifetime: 900000 # 900,000 ms is 15 minutes
      # Maximum size that the pool is allowed to reach, including both idle and in-use connections.
      maximum-pool-size: 10
      # Minimum number of idle connections that HikariCP tries to maintain in the pool.
      # If idle connections dip below this value, HikariCP will make best-effort attempts to add new connections.
      # For optimal performance and responsiveness to burst demand, it's recommended to set this
      # to the same value as maximumPoolSize, creating a fixed-size connection pool.
      minimum-idle: 10
  jpa:
    hibernate:
      ddl-auto: validate
      naming:
        # Use the exact names for tables and columns as specified in the entity classes
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
  liquibase:
    enabled: true
    contexts: h2, dev
    change-log: classpath:db/changelog/db.changelog-master.yaml

---

#
# ------------------------------------------------------------------------------------
# OAuth 2.0 Resource Server JWT Configuration (for Microsoft Entra ID)
# ------------------------------------------------------------------------------------
# Configures this application as an OAuth 2.0 Resource Server, specifically for validating JWTs (JSON Web Tokens) issued by
# Microsoft Entra ID. This setup enables the protection of API endpoints by requiring valid JWTs.
#
# Spring Security JWT Resource Server Documentation:
# https://docs.spring.io/spring-security/reference/servlet/oauth2/resource-server/jwt.html
#

spring:
  security:
    oauth2:
      resourceserver:
        jwt:
          # Specifies the intended audience(s) of the JWT. For Microsoft Entra ID, this is typically the Application (Client) ID
          # of this API's app registration in Entra ID. The value here MUST exactly match the 'aud' (audience) claim in the incoming JWT.
          audiences: ${application.entra-id.client-id}
          # Defines the JWT claim that contains the user's application roles or permissions. Spring Security will use the values from this
          # claim (eg: "roles": ["User.Read", "Admin.Write"]) to populate the GrantedAuthorities for the authenticated principal.
          authorities-claim-name: roles
          # The URI that uniquely identifies the Microsoft Entra ID tenant as the token issuer.
          issuer-uri: https://login.microsoftonline.com/${application.entra-id.tenant-id}/v2.0

---

#
# ------------------------------------------------------------------------------------
# OAuth 2.0 Client Configuration (for this application to call other APIs)
# ------------------------------------------------------------------------------------
# Configures this application to act as an OAuth 2.0 client, enabling it to securely call external APIs (eg: Microsoft Graph)
# by obtaining access tokens. This specific setup is for Microsoft Entra ID using the client credentials grant.
#
# Spring Security OAuth2 Client Documentation:
# https://docs.spring.io/spring-security/reference/servlet/oauth2/client/index.html
#

spring:
  security:
    oauth2:
      client:
        # See: https://docs.spring.io/spring-security/reference/servlet/oauth2/client/core.html#oauth2-client-provider-settings
        provider:
          esdc-edsc:
            issuer-uri: https://login.microsoftonline.com/${application.entra-id.tenant-id}/v2.0
        registration:
          ms-graph:
            provider: esdc-edsc
            # The Application (Client) ID of this application's registration in Microsoft Entra ID.
            # This ID uniquely identifies this application when it requests tokens from Entra ID.
            client-id: ${application.entra-id.client-id}
            # The client secret for this application's registration in Microsoft Entra ID.
            # ‼ CRITICAL ‼  ::: This is a sensitive value. It MUST be set externally.
            client-secret: # (example format: xxxxx~yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy)
            # The scopes this client requests when obtaining an access token for Microsoft Graph.
            # 'https://graph.microsoft.com/.default' is a special scope for Microsoft identity platform that requests all
            # statically configured application permissions (not delegated permissions) for this client registration in Entra ID
            # for the Microsoft Graph resource.
            scope: https://graph.microsoft.com/.default
            # Specifies the OAuth 2.0 grant type this client will use. 'client_credentials' is used for service-to-service
            # communication where the application authenticates itself directly to the authorization server using its client ID
            # and client secret, without any end-user interaction.
            authorization-grant-type: client_credentials

---

#
# ------------------------------------------------------------------------------------
# Spring Boot Actuator configuration
# ------------------------------------------------------------------------------------
# See https://docs.spring.io/spring-boot/appendix/application-properties/index.html#appendix.application-properties.actuator
#

management:
  endpoint:
    env:
      show-values: when-authorized
    health:
      probes:
        enabled: true
      show-components: always
      show-details: when-authorized
  endpoints:
    web:
      exposure:
        include:
          - health
          - metrics
  otlp:
    metrics:
      export:
        enabled: false # set to true and add `spring.otlp.metrics.export.url` to enable metrics export

---

#
# ------------------------------------------------------------------------------------
# SpringDoc OpenAPI & Swagger UI Configuration
# ------------------------------------------------------------------------------------
# These properties customize the generation of the OpenAPI 3.0 specification for this API and the behavior of the integrated
# Swagger UI.
#
# SpringDoc Documentation: https://springdoc.org/
#

springdoc:
  swagger-ui:
    display-request-duration: true
    doc-expansion: none
    oauth:
      client-id: ${application.swagger-ui.authentication.oauth.client-id}
      scopes: ${application.swagger-ui.authentication.oauth.client-id}/.default
      use-pkce-with-authorization-code-grant: true
  writer-with-default-pretty-printer: true
  writer-with-order-by-keys: true

---

#######################################################################################################################
#
# Application properties..
#
#######################################################################################################################

application:
  async:
    enabled: true
  caching:
    enabled: true
    caches:
      cities:
        expire-after-write: 1
        time-unit: minutes
      classifications:
        expire-after-write: 1
        time-unit: minutes
      employment-equities:
        expire-after-write: 1
        time-unit: minutes
      employment-opportunities:
        expire-after-write: 1
        time-unit: minutes
      employment-tenures:
        expire-after-write: 1
        time-unit: minutes
      languages:
        expire-after-write: 1
        time-unit: minutes
      language-referral-types:
        expire-after-write: 1
        time-unit: minutes
      language-requirements:
        expire-after-write: 1
        time-unit: minutes
      non-advertised-appointments:
        expire-after-write: 1
        time-unit: minutes
      priority-levels:
        expire-after-write: 1
        time-unit: minutes
      profile-statuses:
        expire-after-write: 1
        time-unit: minutes
      provinces:
        expire-after-write: 1
        time-unit: minutes
      request-statuses:
        expire-after-write: 1
        time-unit: minutes
      security-clearances:
        expire-after-write: 1
        time-unit: minutes
      selection-process-types:
        expire-after-write: 1
        time-unit: minutes
      user-types:
        expire-after-write: 1
        time-unit: minutes
      wfa-statuses:
        expire-after-write: 1
        time-unit: minutes
      work-schedules:
        expire-after-write: 1
        time-unit: minutes
      work-units:
        expire-after-write: 1
        time-unit: minutes
  entra-id:
    client-id: ea3a6648-7e77-445b-b777-486d26367ee8
    tenant-id: 9ed55846-8a81-4246-acd8-b1a01abfc0d1
    roles:
      hr-advisor: hr-advisor
  gcnotify:
    base-url: https://api.notification.canada.ca/v2/notifications
    connect-timeout: 30s
    read-timeout: 30s
    api-key: 00000000-0000-0000-0000-000000000000 # must be set externally (ex: 00000000-0000-0000-0000-000000000000)
    profile-approved-template-id: 00000000-0000-0000-0000-000000000000 # must be set externally (ex: 00000000-0000-0000-0000-000000000000)
    profile-created-template-id: 00000000-0000-0000-0000-000000000000 # must be set externally (ex: 00000000-0000-0000-0000-000000000000)
    profile-updated-template-id: 00000000-0000-0000-0000-000000000000 # must be set externally (ex: 00000000-0000-0000-0000-000000000000)
    profile-pending-template-id: 00000000-0000-0000-0000-000000000000 # must be set externally (ex: 00000000-0000-0000-0000-000000000000)
    request-created-template-id: 00000000-0000-0000-0000-000000000000 # must be set externally (ex: 00000000-0000-0000-0000-000000000000)
    request-feedback-pending-template-id: 00000000-0000-0000-0000-000000000000 # must be set externally (ex: 00000000-0000-0000-0000-000000000000)
  ms-graph:
    base-url: https://graph.microsoft.com/v1.0
    connect-timeout: 10s
    read-timeout: 30s
  requests:
    enabled: false
  swagger-ui:
    application-name: Vacancy Manager API -- OpenAPI 3.0
    authentication:
      oauth:
        client-id: ${application.entra-id.client-id}
        authorization-url: https://login.microsoftonline.com/${application.entra-id.tenant-id}/oauth2/v2.0/authorize
        token-url: https://login.microsoftonline.com/${application.entra-id.tenant-id}/oauth2/v2.0/token
    contact-name: Digital Technology Solutions
    contact-url: https://github.com/dts-stn/vacman/
    description: |
      This OpenAPI document describes the key areas where developers typically engage with the Vacancy Manager API.
    tos-url: https://www.canada.ca/en/transparency/terms.html

codes:
  languages:
    english: EN
    french: FR
  profile-statuses:
    approved: APPROVED
    archived: ARCHIVED
    incomplete: INCOMPLETE
    pending: PENDING
  request-statuses:
    cancelled: CANCELLED
    clearance-granted: CLR_GRANTED
    draft: DRAFT
    feedback-pending-approval: FDBK_PEND_APPR
    feedback-pending: FDBK_PENDING
    hr-review: HR_REVIEW
    no-match-hr-review: NO_MATCH_HR_REVIEW
    pending-psc-clearance-no-vms: PENDING_PSC_NO_VMS
    pending-psc-clearance: PENDING_PSC
    psc-clearance-granted: PSC_GRANTED
    submitted: SUBMIT
  user-types:
    employee: employee
    hr-advisor: HRA

---

#
# Import developer-specific local configurations (eg: application-local.yaml)
# for all profiles *except* 'test'. This allows local overrides without affecting tests.
#
# ⚠️ Important: to ensure proper overriding of properties, the `application-local.yaml` imports must
#               be placed after all other configurations.
#

spring:
  config:
    activate:
      on-profile: '!test'
    import:
      - optional:application-local.yml
      - optional:application-local.yaml
