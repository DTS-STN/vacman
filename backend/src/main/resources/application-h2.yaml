spring:
  datasource:
    # JDBC URL for an H2 in-memory database.
    #   - jdbc:h2:mem:testdb: Connects to an H2 in-memory database named 'testdb'.
    #   - MODE=MSSQLServer: Enables H2's MS SQL Server compatibility mode. This attempts to mimic
    #     SQL Server syntax and behavior, useful for local development/testing if production uses SQL Server.
    #   - DATABASE_TO_UPPER=false: Prevents H2 from converting unquoted identifiers (table/column names)
    #     to uppercase. Important for compatibility with SQL Server if it's configured for case-sensitivity
    #     or if the schema relies on mixed-case identifiers.
    #   - CASE_INSENSITIVE_IDENTIFIERS=true: Makes unquoted identifiers case-insensitive. Combined with
    #     DATABASE_TO_UPPER=false, this aims to match typical SQL Server case-insensitivity for object names.
    #   - DB_CLOSE_DELAY=-1: Keeps the in-memory database alive as long as the JVM is running,
    #     even if all connections are closed. Crucial for tests or development scenarios where the
    #     database schema and data need to persist across multiple connection acquisitions.
    url: jdbc:h2:mem:testdb;MODE=MSSQLServer;DATABASE_TO_UPPER=false;CASE_INSENSITIVE_IDENTIFIERS=true;DB_CLOSE_DELAY=-1;
  jpa:
    hibernate:
      ddl-auto: update
    defer-datasource-initialization: true
    show-sql: true
  h2:
    console:
      enabled: true
      path: /h2-console

# Database seeder configuration for H2 profile
app:
  database:
    seeder:
      enabled: true
      seedLookupTables: true
      seedJunctionTables: true  # Enable junction tables now that they're working
      userCount: 10
      requestCount: 5
      clearDataFirst: false
      skipIfDataExists: false
      logSeedingProgress: true

      # User-Profile relationship configuration (must sum to 1.0)
      # Simple configuration for H2 testing
      usersWithZeroProfilesPercentage: 0.1     # 10% of users have no profiles
      usersWithOneProfilePercentage: 0.9       # 90% of users have exactly one profile
      usersWithMultipleProfilesPercentage: 0.0 # 0% of users have multiple profiles (simple for testing)
      minProfilesPerUserWithMultiple: 2        # Not used since percentage is 0
      maxProfilesPerUserWithMultiple: 2        # Not used since percentage is 0
      ensureOneActiveProfilePerUser: true      # Ensure only one ACTIVE profile per user